Task 1:

-- DDL command file

-- group members:
-----------------
-- 1. Arun Sagar Sundahally Ashok
-- 2. Mohammad Kadir

-- Description:
---------------
-- The first task is to demonstrate creation of database table and relationships.
-- The topic chosen is User comment on social media platform, to avoid any potential misconduct, chose a different data model from scratch.

-- The identified entities:
--------------------------
-- 1. Users [stores user information]
-- 2. Posts [stores the post uploaded by a user]
-- 3. Comments [stores the comment made by the user on the post]
-- 4. Likes [stores a like on a post]
-- 5. Ratings [stores the likes on each post]

-- Users    -> UserID(pk), username, email, password, createdAt
-- Posts    -> PostID(pk), UserID(fk), title, content, createdAt
-- Comments -> CommentID(pk), PostID(fk), UserID(pk), comment, createdAt
-- Likes    -> LikeID(pk), PostID(fk), UserID(fk), createdAt
-- Ratings   -> RatingID(pk), PostID(fk), UserID(fk), Rating, createdAt

-- Both Likes and Ratings tables serve as the bridge for the many-to-many relationship between Users and Posts.

-- Relationships
----------------
-- One user can create many posts, and one post is created by one user. [one to many]
-- One user can create many comments, and one comment is made by one user. [one to many]
-- One user can like many posts, and one post can be liked by many users. [many to many]
-- One user can rate many posts, and one post can be rated by many users. [many to many]
-- One post can have many comments, and one comment is made on one post. [one to many]
-- One post can have many likes, and one like is given to one post. [one to many]
-- One post can have many ratings, and one rating is given to one post. [one to many]
------------------------------------------------

-- Commands
-----------

CREATE TABLE Users (
	UserID serial PRIMARY KEY,
	UserName VARCHAR(50) UNIQUE,
	Email VARCHAR(100) UNIQUE NOT NULL,
	Password VARCHAR(255) NOT NULL,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Posts (
	PostID serial PRIMARY KEY,
	UserID INT NOT NULL,
	Title VARCHAR(50) NOT NULL,
	Content TEXT NOT NULL,
	Category VARCHAR(50),
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN key (UserID) REFERENCES Users (UserID)
);

CREATE TABLE Comments (
	CommentID serial PRIMARY KEY,
	PostID INT NOT NULL,
	UserID INT NOT NULL,
	Comment TEXT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN key (UserID) REFERENCES Users (UserID),
	FOREIGN key (PostID) REFERENCES Posts (PostID)
);

CREATE TABLE Likes (
	LikeID serial PRIMARY KEY,
	PostID INT NOT NULL,
	UserID INT NOT NULL,
	UNIQUE (PostID, UserID),
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN key (UserID) REFERENCES Users (UserID),
	FOREIGN key (PostID) REFERENCES Posts (PostID)
);

CREATE TABLE Ratings (
	RatingID serial PRIMARY KEY,
	PostID INT NOT NULL,
	UserID INT NOT NULL,
	Rating INT CHECK (Rating BETWEEN 1 AND 5), -- Rating between 1 and 5
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (PostID) REFERENCES Posts (PostID),
	FOREIGN KEY (UserID) REFERENCES Users (UserID)
);
